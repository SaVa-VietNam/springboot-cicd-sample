name: Build and deploy springboot-api to github container registry
on:
  workflow_dispatch:
  push:
    branches: [ "ghcr" ]
    tags:
      - '*.*.*'
  pull_request:
    branches: [ "ghcr" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: test

jobs:
  build-deploy:
    name: BUILD & DEPLOY TO GHCR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup jdk 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
    #   - name: Unit tests
    #     run: mvn -B test --file pom.xml
        
    #   - name: SonarQube scan
    #     uses: kitabisa/sonarqube-action@v1.2.0
    #     env:
    #       SONAR_SCANNER_OPTS: -X
    #     with:
    #       host: ${{ secrets.SONARQUBE_HOST }}
    #       login: ${{ secrets.SONARQUBE_TOKEN }}
    #       projectBaseDir: "src/"
    #       projectKey: "my-custom-project"
    
      - name: Setup gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
        
      - name: Build with gradle wrapper
        run: ./gradlew build

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      
      - name: Extract metadata (tags, labels) from docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # tags: ghcr.io/${{ github.actor }}/rest-api:latest
        # run: |
        #   docker build . -t ghcr.io/${{ github.actor }}/rest-api:latest
        #   docker push ghcr.io/${{ github.actor }}/rest-api:latest